{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/api.service.ts","webpack:///./src/app/core/store/helpers/action.ts","webpack:///./src/app/core/store/helpers/index.ts","webpack:///./src/app/core/store/helpers/selector.ts","webpack:///./src/app/core/store/index.ts","webpack:///./src/app/core/store/root.reducer.ts","webpack:///./src/app/core/store/store.model.ts","webpack:///./src/app/core/store/store.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dish/dish.component.css","webpack:///./src/app/dish/dish.component.html","webpack:///./src/app/dish/dish.component.ts","webpack:///./src/app/dish/model/dish.model.ts","webpack:///./src/app/dish/store/action.ts","webpack:///./src/app/dish/store/epic.ts","webpack:///./src/app/dish/store/reducer.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-dashboard></app-dashboard>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule }   from './app-routing.module';\nimport { AppComponent }       from './app.component';\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { DishComponent }      from \"./dish/dish.component\";\nimport { DishEpics }          from \"./dish/store/epic\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    DishComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n  ],\n  providers: [ DishEpics ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Map } from 'immutable';\n\n@Injectable()\nexport class ApiService {\n\n  constructor(private http: HttpClient) {}\n\n  fetch(path: string, parameters: Map<string, any> = null) {\n    const options: { params?: HttpParams } = {};\n\n    if (parameters) {\n      options.params = parameters.reduce(\n        (httpParams, value, key) => httpParams.append(key, JSON.stringify(value)), new HttpParams\n      );\n    }\n\n    return this.http.get(path, options).pipe(\n      map((response: {data: any}) => response.data)\n    );\n  }\n}\n","import { ActionCreatorsMapObject } from 'redux';\n\nexport interface Action<T extends string> {\n  type: T;\n}\n\nexport interface ActionWithPayload<T extends string, P> extends Action<T> {\n  payload: P;\n}\n\nexport type ActionsUnion<A extends ActionCreatorsMapObject> = ReturnType<A[keyof A]>;\nexport type ActionByType<ActionUnion, ActionType extends string> = ActionUnion extends Action<ActionType> ? ActionUnion : never;\n\nexport function createAction<T extends string>(type: T): Action<T>;\nexport function createAction<T extends string, P>(type: T, payload: P): ActionWithPayload<T, P>;\nexport function createAction<T extends string, P>(type: T, payload?: P) {\n  return payload === undefined ? { type } : { type, payload };\n}\n","export * from './action';\nexport * from './selector';\n","import { combineLatest, Observable, of } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\nexport const createSelector = (callback, ...streams) => {\n  return (...parameters: any[]) => {\n    const parametersAsObservable = parameters.map(\n      parameter => parameter instanceof Observable ? parameter : of(parameter)\n    );\n\n    return combineLatest(...streams, ...parametersAsObservable)\n      .pipe(\n        map(callback),\n        distinctUntilChanged()\n      ) as Observable<any>;\n  };\n};\n","export * from './helpers';\nexport * from './store.model';\n","import { combineReducers } from 'redux-immutable';\nimport { Store } from './store.model';\nimport dish from \"../../dish/store/reducer\";\n\nconst rootReducer = combineReducers<Store>({\n  dish\n});\n\nexport default rootReducer;\n","import { List, Record } from 'immutable';\nimport { Dish }         from \"../../dish/model/dish.model\";\n\ninterface StoreInterface {\n  dishes: List<Dish>;\n}\n\nconst storeRecord = Record<StoreInterface>({\n  dishes: List(),\n});\n\nexport class Store extends storeRecord implements StoreInterface {}\n","import { Injectable } from '@angular/core';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { BehaviorSubject, ReplaySubject, Observable, Subject } from 'rxjs';\nimport { filter, mergeMap } from 'rxjs/operators';\nimport rootReducer from './root.reducer';\nimport { Store } from './store.model';\n\nconst state$: BehaviorSubject<Store> = new BehaviorSubject<Store>(null);\nconst action$ = new Subject;\n\nconst epic$ = new ReplaySubject();\nconst rootEpic: any = (action$, store) => epic$.pipe(\n  mergeMap((epic: any) => epic(action$, store))\n);\n\n@Injectable()\nexport class AppStore {\n  static state$: Observable<Store> = state$.pipe(\n    filter(state => state !== null)\n  );\n\n  constructor() {\n    const epicMiddleware = createEpicMiddleware();\n\n    const store = createStore(\n      rootReducer,\n      new Store,\n      composeWithDevTools(\n        applyMiddleware(epicMiddleware)\n      )\n    );\n\n    epicMiddleware.run(rootEpic);\n\n    store.subscribe(() => state$.next(store.getState()));\n\n    action$.subscribe(store.dispatch);\n  }\n\n  static dispatch(action) {\n    return action$.next(action);\n  }\n\n  static select(selector) {\n    return selector(AppStore.state$);\n  }\n\n  static addEpics(...epics) {\n    epics.map(epic => epic$.next(epic));\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h3>\\n  Dashboard\\n</h3>\\n\\n<div *ngFor=\\\"let dish of dishes$ | async\\\">\\n  <span>{{ dish.get('id') }}</span>\\n  <span>{{ dish.get('name') }}</span>\\n  <span>{{ dish.get('calories') }}</span>\\n</div>\"","import { of,  Observable }   from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { Dish }              from \"../dish/model/dish.model\";\nimport { List }              from \"immutable\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  private dishes$: Observable<List<Dish>>;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.dishes$ = of(\n        List([\n            new Dish({id: 1, name: 'test', 'calories': 123}),\n            new Dish({id: 2, name: 'test2', 'calories': 456})\n        ])\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc2gvZGlzaC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  dish works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dish',\n  templateUrl: './dish.component.html',\n  styleUrls: ['./dish.component.css']\n})\nexport class DishComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Record } from 'immutable';\n\nexport interface DishInterface {\n    id: number;\n    name: string;\n    calories: number;\n}\n\nconst dishRecord = Record<DishInterface>({\n    id: null,\n    name: '',\n    calories: null\n});\n\nexport class Dish extends dishRecord implements DishInterface {}\n","import { ActionsUnion, createAction } from '../../core/store';\nimport { Dish }                       from \"../model/dish.model\";\nimport { List }                       from \"immutable\";\n\nexport enum DishActionType {\n  LOAD_DISHES = 'LOAD_DISHES',\n  SET_DISHES = 'SET_DISHES',\n  CREATE_DISH = 'CREATE_DISH',\n  UPDATE_DISH = 'UPDATE_DISH',\n  DELETE_DISH = 'DELETE_DISH'\n};\n\nexport const DishActions = {\n  loadDishes: () => createAction(DishActionType.LOAD_DISHES),\n  setDishes: (dishes: List<Dish>) => createAction(DishActionType.SET_DISHES, { dishes }),\n  createDish: (value: Dish) => createAction(DishActionType.CREATE_DISH, { value }),\n  updateDish: (path: Array<string | number>, value: any) => createAction(DishActionType.UPDATE_DISH, { path, value }),\n  deleteDish: (path: string | Array<string | number>) => createAction(DishActionType.DELETE_DISH, path),\n};\n\nexport type Actions = ActionsUnion<typeof DishActions>;\n","import { Injectable }                  from '@angular/core';\nimport { mergeMap ,  map }             from 'rxjs/operators';\nimport { ApiService }                  from \"../../core/api.service\";\nimport { DishActions, DishActionType } from \"./action\";\nimport { ofType }                      from \"redux-observable\";\nimport { AppStore }                    from \"../../core/store/store.service\";\n\n@Injectable()\nexport class DishEpics {\n\n  constructor(private api: ApiService) {\n    AppStore.addEpics(this.loadDishes);\n  }\n\n  private loadDishes = (action$, state$) => action$.pipe(\n    ofType(DishActionType.LOAD_DISHES),\n    mergeMap(() =>\n      this.api.fetch('/dishes').pipe(\n        map(DishActions.setDishes)\n      )\n    )\n  );\n\n}\n","import { fromJS }                  from 'immutable';\nimport { Actions, DishActionType } from \"./action\";\nimport { Dish }                    from \"../model/dish.model\";\n\nexport default function dish(state: Dish, action: Actions) {\n  switch (action.type) {\n    case DishActionType.SET_DISHES:\n      return action.payload.dishes;\n\n    case DishActionType.UPDATE_DISH:\n      return state.setIn([...asArray(action.payload.path)], fromJS(action.payload.value));\n\n    case DishActionType.CREATE_DISH:\n      return state.unshift(action.payload.value);\n\n    case DishActionType.DELETE_DISH:\n      return state.deleteIn([...asArray(action.payload)]);\n  }\n\n  return state;\n}\n\nfunction asArray(data) {\n  return Array.isArray(data) ? data : [data];\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}